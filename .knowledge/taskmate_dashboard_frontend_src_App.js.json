{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "Main application component for the TaskMate dashboard, integrating UI layout, theme toggling, data fetching with custom hook, and task management functionality.", "external_files": ["./index.css", "./components/layout/Header", "./components/layout/Container", "./components/dashboard/MetricsCards", "./components/tasks/TaskFilters", "./components/tasks/TaskBoard", "./components/tasks/TaskForm", "./components/tasks/EmptyState", "./hooks/useTasks"], "external_methods": ["useTasks()", "document.documentElement.setAttribute"], "published": ["App"], "classes": [], "methods": [{"name": "App()", "description": "Main React functional component serving as the primary application shell for the dashboard, managing theme, task data, and user interactions.", "scope": "", "scopeKind": ""}, {"name": "toggleTheme", "description": "Toggles the UI theme between light and dark modes."}, {"name": "handleAddClick", "description": "Handles action for adding a new task, resetting editing state and showing task form."}, {"name": "handleCancelForm", "description": "Handles canceling the task form, resetting editing state and hiding the form."}, {"name": "handleSubmitForm", "description": "Handles submission of task form, either updating an existing task or creating a new one."}, {"name": "handleEditTask", "description": "Prepares the form for editing an existing task."}, {"name": "handleDeleteTask", "description": "Handles deletion of a task by ID."}, {"name": "handleStatusChange", "description": "Handles changing the status of a task."}], "calls": ["useEffect()", "setTheme()", "refresh()", "createTask()", "updateTask()", "deleteTask()", "changeStatus()", "Header()", "Container()", "MetricsCards()", "TaskFilters()", "TaskForm()", "EmptyState()", "document.documentElement.setAttribute()"], "search-terms": ["React App component", "Task Management Dashboard", "Theme toggle", "useTasks hook", "Task form handling"], "state": 2, "file_id": 3, "knowledge_revision": 66, "git_revision": "ac478e031a09ddf71e89d39418b5c3a4ac879933", "revision_history": [{"24": "6b2e35ba54d493c4f6922710677dfe1a91e64742"}, {"44": "6b2e35ba54d493c4f6922710677dfe1a91e64742"}, {"61": "026705d44c34a97d261596e481e9e63cd34bb4dc"}, {"66": "ac478e031a09ddf71e89d39418b5c3a4ac879933"}], "ctags": [{"_type": "tag", "name": "App", "path": "/home/kavia/workspace/code-generation/task-management-dashboard-19286-19255/taskmate_dashboard_frontend/src/App.js", "pattern": "/^function App() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filters", "path": "/home/kavia/workspace/code-generation/task-management-dashboard-19286-19255/taskmate_dashboard_frontend/src/App.js", "pattern": "/^            value={filters}$/", "language": "JavaScript", "kind": "field", "scope": "App.value", "scopeKind": "class"}, {"_type": "tag", "name": "handleAddClick", "path": "/home/kavia/workspace/code-generation/task-management-dashboard-19286-19255/taskmate_dashboard_frontend/src/App.js", "pattern": "/^            onAddClick={handleAddClick}$/", "language": "JavaScript", "kind": "field", "scope": "App.onAddClick", "scopeKind": "class"}, {"_type": "tag", "name": "refresh", "path": "/home/kavia/workspace/code-generation/task-management-dashboard-19286-19255/taskmate_dashboard_frontend/src/App.js", "pattern": "/^                onClick={refresh}$/", "language": "JavaScript", "kind": "field", "scope": "App.onClick", "scopeKind": "class"}, {"_type": "tag", "name": "setFilters", "path": "/home/kavia/workspace/code-generation/task-management-dashboard-19286-19255/taskmate_dashboard_frontend/src/App.js", "pattern": "/^            onChange={setFilters}$/", "language": "JavaScript", "kind": "field", "scope": "App.onChange", "scopeKind": "class"}], "hash": "3d16d8d42979b57fe19b4e0bf5d5cd24", "format-version": 4, "code-base-name": "taskmate_dashboard_frontend", "filename": "taskmate_dashboard_frontend/src/App.js", "fields": [{"name": "value={filters}", "scope": "App.value", "scopeKind": "class", "description": "unavailable"}, {"name": "onAddClick={handleAddClick}", "scope": "App.onAddClick", "scopeKind": "class", "description": "unavailable"}, {"name": "onClick={refresh}", "scope": "App.onClick", "scopeKind": "class", "description": "unavailable"}, {"name": "onChange={setFilters}", "scope": "App.onChange", "scopeKind": "class", "description": "unavailable"}]}